name: integration-tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  MySQL-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Free disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          docker volume prune -f
          docker image prune -f
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.4"

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-cdc-integration-vendor-${{ hashFiles('go.sum') }}

      - name: Update Vendor
        run: go mod vendor

      - name: Pull images
        run: docker-compose -f docker-compose-avro.yml pull --ignore-pull-failures

      - name: TiDB version
        run: |
          docker run pingcap/tidb:nightly -V
          docker run pingcap/tikv:nightly -V
          docker run pingcap/pd:nightly -V

      - name: Build Integration Framework
        run: |
          cd $GITHUB_WORKSPACE/integration
          go build

      - name: Run Integration Framework
        timeout-minutes: 45
        run: |
          cd $GITHUB_WORKSPACE/integration
          ./integration -protocol=mysql

      - name: Try to dump container logs
        if: ${{ failure() }}
        run: docker-compose -f docker-compose-avro.yml logs -t

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs
          path: ${{ github.workspace }}/docker/logs/*

      - name: Clean Up
        if: ${{ always() }}
        run: |
          $GITHUB_WORKSPACE/scripts/avro-local-test.sh down

  OldValue-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Free disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          docker volume prune -f
          docker image prune -f
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.4"

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-cdc-integration-vendor-${{ hashFiles('go.sum') }}

      - name: Update Vendor
        run: go mod vendor

      - name: Pull images
        run: docker-compose -f docker-compose-avro.yml pull --ignore-pull-failures

      - name: TiDB version
        run: |
          docker run pingcap/tidb:nightly -V
          docker run pingcap/tikv:nightly -V
          docker run pingcap/pd:nightly -V

      - name: Build Integration Framework
        run: |
          cd $GITHUB_WORKSPACE/integration
          go build

      - name: Run Integration Framework
        timeout-minutes: 45
        run: |
          cd $GITHUB_WORKSPACE/integration
          ./integration -protocol=simple-mysql-checking-old-value

      - name: Try to dump container logs
        if: ${{ failure() }}
        run: docker-compose -f docker-compose-avro.yml logs -t

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs
          path: ${{ github.workspace }}/docker/logs/*

      - name: Clean Up
        if: ${{ always() }}
        run: |
          $GITHUB_WORKSPACE/scripts/avro-local-test.sh down

  CanalJson-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Free disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          docker volume prune -f
          docker image prune -f
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.4"

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-cdc-integration-vendor-${{ hashFiles('go.sum') }}

      - name: Update Vendor
        run: go mod vendor

      - name: Pull images
        run: docker-compose -f docker-compose-canal.yml pull --ignore-pull-failures

      - name: TiDB version
        run: |
          docker run pingcap/tidb:nightly -V
          docker run pingcap/tikv:nightly -V
          docker run pingcap/pd:nightly -V

      - name: Build Integration Framework
        run: |
          cd $GITHUB_WORKSPACE/integration
          go build

      - name: Run Integration Framework
        timeout-minutes: 45
        run: |
          cd $GITHUB_WORKSPACE/integration
          ./integration -protocol=canalJson

      - name: Try to dump container logs
        if: ${{ failure() }}
        run: docker-compose -f docker-compose-canal.yml logs -t

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs
          path: ${{ github.workspace }}/docker/logs/*

      - name: Clean Up
        if: ${{ always() }}
        run: |
          $GITHUB_WORKSPACE/scripts/canal/canal-local-test.sh down

  Canal-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Free disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          docker volume prune -f
          docker image prune -f
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.4"

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-cdc-integration-vendor-${{ hashFiles('go.sum') }}

      - name: Update Vendor
        run: go mod vendor

      - name: Pull images
        run: docker-compose -f docker-compose-canal.yml pull --ignore-pull-failures

      - name: TiDB version
        run: |
          docker run pingcap/tidb:nightly -V
          docker run pingcap/tikv:nightly -V
          docker run pingcap/pd:nightly -V

      - name: Build Integration Framework
        run: |
          cd $GITHUB_WORKSPACE/integration
          go build

      - name: Run Integration Framework
        timeout-minutes: 45
        run: |
          cd $GITHUB_WORKSPACE/integration
          ./integration -protocol=canal

      - name: Try to dump container logs
        if: ${{ failure() }}
        run: docker-compose -f docker-compose-canal.yml logs -t

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs
          path: ${{ github.workspace }}/docker/logs/*

      - name: Clean Up
        if: ${{ always() }}
        run: |
          $GITHUB_WORKSPACE/scripts/canal/canal-local-test.sh down

  Avro-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Free disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          docker volume prune -f
          docker image prune -f
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.4"

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-cdc-integration-vendor-${{ hashFiles('go.sum') }}

      - name: Update Vendor
        run: go mod vendor

      - name: Pull images
        run: docker-compose -f docker-compose-avro.yml pull --ignore-pull-failures

      - name: TiDB version
        run: |
          docker run pingcap/tidb:nightly -V
          docker run pingcap/tikv:nightly -V
          docker run pingcap/pd:nightly -V

      - name: Build Integration Framework
        run: |
          cd $GITHUB_WORKSPACE/integration
          go build

      - name: Run Integration Framework
        timeout-minutes: 45
        run: |
          cd $GITHUB_WORKSPACE/integration
          ./integration

      - name: Try to dump container logs
        if: ${{ failure() }}
        run: docker-compose -f docker-compose-avro.yml logs -t

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs
          path: ${{ github.workspace }}/docker/logs/*

      - name: Clean Up
        if: ${{ always() }}
        run: |
          $GITHUB_WORKSPACE/scripts/avro-local-test.sh down
