// Code generated by MockGen. DO NOT EDIT.
// Source: cdc/api/v2/api_helpers.go

// Package mock_v2 is a generated GoMock package.
package mock_v2

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	kv "github.com/pingcap/tidb/kv"
	v2 "github.com/pingcap/tiflow/cdc/api/v2"
	model "github.com/pingcap/tiflow/cdc/model"
	owner "github.com/pingcap/tiflow/cdc/owner"
	security "github.com/pingcap/tiflow/pkg/security"
	pd "github.com/tikv/pd/client"
)

// MockAPIV2Helpers is a mock of APIV2Helpers interface.
type MockAPIV2Helpers struct {
	ctrl     *gomock.Controller
	recorder *MockAPIV2HelpersMockRecorder
}

// MockAPIV2HelpersMockRecorder is the mock recorder for MockAPIV2Helpers.
type MockAPIV2HelpersMockRecorder struct {
	mock *MockAPIV2Helpers
}

// NewMockAPIV2Helpers creates a new mock instance.
func NewMockAPIV2Helpers(ctrl *gomock.Controller) *MockAPIV2Helpers {
	mock := &MockAPIV2Helpers{ctrl: ctrl}
	mock.recorder = &MockAPIV2HelpersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIV2Helpers) EXPECT() *MockAPIV2HelpersMockRecorder {
	return m.recorder
}

// CreateTiStore mocks base method.
func (m *MockAPIV2Helpers) CreateTiStore(arg0 []string, arg1 *security.Credential) (kv.Storage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTiStore", arg0, arg1)
	ret0, _ := ret[0].(kv.Storage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTiStore indicates an expected call of CreateTiStore.
func (mr *MockAPIV2HelpersMockRecorder) CreateTiStore(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTiStore", reflect.TypeOf((*MockAPIV2Helpers)(nil).CreateTiStore), arg0, arg1)
}

// GetPDClient mocks base method.
func (m *MockAPIV2Helpers) GetPDClient(arg0 context.Context, arg1 []string, arg2 *security.Credential) (pd.Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPDClient", arg0, arg1, arg2)
	ret0, _ := ret[0].(pd.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPDClient indicates an expected call of GetPDClient.
func (mr *MockAPIV2HelpersMockRecorder) GetPDClient(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPDClient", reflect.TypeOf((*MockAPIV2Helpers)(nil).GetPDClient), arg0, arg1, arg2)
}

// VerifyCreateChangefeedConfig mocks base method.
func (m *MockAPIV2Helpers) VerifyCreateChangefeedConfig(arg0 context.Context, arg1 *v2.ChangefeedConfig, arg2 pd.Client, arg3 owner.StatusProvider, arg4 string, arg5 kv.Storage) (*model.ChangeFeedInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyCreateChangefeedConfig", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*model.ChangeFeedInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyCreateChangefeedConfig indicates an expected call of VerifyCreateChangefeedConfig.
func (mr *MockAPIV2HelpersMockRecorder) VerifyCreateChangefeedConfig(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyCreateChangefeedConfig", reflect.TypeOf((*MockAPIV2Helpers)(nil).VerifyCreateChangefeedConfig), arg0, arg1, arg2, arg3, arg4, arg5)
}

// VerifyUpdateChangefeedConfig mocks base method.
func (m *MockAPIV2Helpers) VerifyUpdateChangefeedConfig(arg0 context.Context, arg1 *v2.ChangefeedConfig, arg2 *model.ChangeFeedInfo, arg3 *model.UpstreamInfo) (*model.ChangeFeedInfo, *model.UpstreamInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyUpdateChangefeedConfig", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*model.ChangeFeedInfo)
	ret1, _ := ret[1].(*model.UpstreamInfo)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// VerifyUpdateChangefeedConfig indicates an expected call of VerifyUpdateChangefeedConfig.
func (mr *MockAPIV2HelpersMockRecorder) VerifyUpdateChangefeedConfig(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyUpdateChangefeedConfig", reflect.TypeOf((*MockAPIV2Helpers)(nil).VerifyUpdateChangefeedConfig), arg0, arg1, arg2, arg3)
}

// VerifyUpstream mocks base method.
func (m *MockAPIV2Helpers) VerifyUpstream(arg0 context.Context, arg1 *v2.ChangefeedConfig, arg2 *model.ChangeFeedInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyUpstream", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyUpstream indicates an expected call of VerifyUpstream.
func (mr *MockAPIV2HelpersMockRecorder) VerifyUpstream(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyUpstream", reflect.TypeOf((*MockAPIV2Helpers)(nil).VerifyUpstream), arg0, arg1, arg2)
}
