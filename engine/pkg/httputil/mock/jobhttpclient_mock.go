// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pingcap/tiflow/engine/pkg/httputil (interfaces: JobHTTPClient)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJobHTTPClient is a mock of JobHTTPClient interface.
type MockJobHTTPClient struct {
	ctrl     *gomock.Controller
	recorder *MockJobHTTPClientMockRecorder
}

// MockJobHTTPClientMockRecorder is the mock recorder for MockJobHTTPClient.
type MockJobHTTPClientMockRecorder struct {
	mock *MockJobHTTPClient
}

// NewMockJobHTTPClient creates a new mock instance.
func NewMockJobHTTPClient(ctrl *gomock.Controller) *MockJobHTTPClient {
	mock := &MockJobHTTPClient{ctrl: ctrl}
	mock.recorder = &MockJobHTTPClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobHTTPClient) EXPECT() *MockJobHTTPClientMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockJobHTTPClient) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockJobHTTPClientMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockJobHTTPClient)(nil).Close))
}

// GetJobDetail mocks base method.
func (m *MockJobHTTPClient) GetJobDetail(arg0 context.Context, arg1, arg2 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobDetail", arg0, arg1, arg2)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobDetail indicates an expected call of GetJobDetail.
func (mr *MockJobHTTPClientMockRecorder) GetJobDetail(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobDetail", reflect.TypeOf((*MockJobHTTPClient)(nil).GetJobDetail), arg0, arg1, arg2)
}
