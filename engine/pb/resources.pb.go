// Copyright 2022 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: resources.proto

package pb

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ResourceErrorCode int32

const (
	ResourceErrorCode_ResourceIDConflict           ResourceErrorCode = 0
	ResourceErrorCode_ResourceTypeUnrecognized     ResourceErrorCode = 1
	ResourceErrorCode_ResourceManagerInternalError ResourceErrorCode = 2
	ResourceErrorCode_ResourceNotFound             ResourceErrorCode = 3
)

var ResourceErrorCode_name = map[int32]string{
	0: "ResourceIDConflict",
	1: "ResourceTypeUnrecognized",
	2: "ResourceManagerInternalError",
	3: "ResourceNotFound",
}

var ResourceErrorCode_value = map[string]int32{
	"ResourceIDConflict":           0,
	"ResourceTypeUnrecognized":     1,
	"ResourceManagerInternalError": 2,
	"ResourceNotFound":             3,
}

func (x ResourceErrorCode) String() string {
	return proto.EnumName(ResourceErrorCode_name, int32(x))
}

func (ResourceErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf1b13971fe4c19d, []int{0}
}

type CreateResourceRequest struct {
	ResourceId      string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CreatorExecutor string `protobuf:"bytes,2,opt,name=creator_executor,json=creatorExecutor,proto3" json:"creator_executor,omitempty"`
	JobId           string `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	CreatorWorkerId string `protobuf:"bytes,4,opt,name=creator_worker_id,json=creatorWorkerId,proto3" json:"creator_worker_id,omitempty"`
}

func (m *CreateResourceRequest) Reset()         { *m = CreateResourceRequest{} }
func (m *CreateResourceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateResourceRequest) ProtoMessage()    {}
func (*CreateResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf1b13971fe4c19d, []int{0}
}
func (m *CreateResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResourceRequest.Merge(m, src)
}
func (m *CreateResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResourceRequest proto.InternalMessageInfo

func (m *CreateResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *CreateResourceRequest) GetCreatorExecutor() string {
	if m != nil {
		return m.CreatorExecutor
	}
	return ""
}

func (m *CreateResourceRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *CreateResourceRequest) GetCreatorWorkerId() string {
	if m != nil {
		return m.CreatorWorkerId
	}
	return ""
}

type CreateResourceResponse struct {
}

func (m *CreateResourceResponse) Reset()         { *m = CreateResourceResponse{} }
func (m *CreateResourceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResourceResponse) ProtoMessage()    {}
func (*CreateResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf1b13971fe4c19d, []int{1}
}
func (m *CreateResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResourceResponse.Merge(m, src)
}
func (m *CreateResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResourceResponse proto.InternalMessageInfo

type QueryResourceRequest struct {
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (m *QueryResourceRequest) Reset()         { *m = QueryResourceRequest{} }
func (m *QueryResourceRequest) String() string { return proto.CompactTextString(m) }
func (*QueryResourceRequest) ProtoMessage()    {}
func (*QueryResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf1b13971fe4c19d, []int{2}
}
func (m *QueryResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResourceRequest.Merge(m, src)
}
func (m *QueryResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResourceRequest proto.InternalMessageInfo

func (m *QueryResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type QueryResourceResponse struct {
	CreatorExecutor string `protobuf:"bytes,2,opt,name=creator_executor,json=creatorExecutor,proto3" json:"creator_executor,omitempty"`
	JobId           string `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	CreatorWorkerId string `protobuf:"bytes,4,opt,name=creator_worker_id,json=creatorWorkerId,proto3" json:"creator_worker_id,omitempty"`
}

func (m *QueryResourceResponse) Reset()         { *m = QueryResourceResponse{} }
func (m *QueryResourceResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResourceResponse) ProtoMessage()    {}
func (*QueryResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf1b13971fe4c19d, []int{3}
}
func (m *QueryResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResourceResponse.Merge(m, src)
}
func (m *QueryResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResourceResponse proto.InternalMessageInfo

func (m *QueryResourceResponse) GetCreatorExecutor() string {
	if m != nil {
		return m.CreatorExecutor
	}
	return ""
}

func (m *QueryResourceResponse) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *QueryResourceResponse) GetCreatorWorkerId() string {
	if m != nil {
		return m.CreatorWorkerId
	}
	return ""
}

type ResourceError struct {
	ErrorCode  ResourceErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=pb.ResourceErrorCode" json:"error_code,omitempty"`
	StackTrace string            `protobuf:"bytes,2,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
}

func (m *ResourceError) Reset()         { *m = ResourceError{} }
func (m *ResourceError) String() string { return proto.CompactTextString(m) }
func (*ResourceError) ProtoMessage()    {}
func (*ResourceError) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf1b13971fe4c19d, []int{4}
}
func (m *ResourceError) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceError.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceError.Merge(m, src)
}
func (m *ResourceError) XXX_Size() int {
	return m.Size()
}
func (m *ResourceError) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceError.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceError proto.InternalMessageInfo

func (m *ResourceError) GetErrorCode() ResourceErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ResourceErrorCode_ResourceIDConflict
}

func (m *ResourceError) GetStackTrace() string {
	if m != nil {
		return m.StackTrace
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.ResourceErrorCode", ResourceErrorCode_name, ResourceErrorCode_value)
	proto.RegisterType((*CreateResourceRequest)(nil), "pb.CreateResourceRequest")
	proto.RegisterType((*CreateResourceResponse)(nil), "pb.CreateResourceResponse")
	proto.RegisterType((*QueryResourceRequest)(nil), "pb.QueryResourceRequest")
	proto.RegisterType((*QueryResourceResponse)(nil), "pb.QueryResourceResponse")
	proto.RegisterType((*ResourceError)(nil), "pb.ResourceError")
}

func init() { proto.RegisterFile("resources.proto", fileDescriptor_cf1b13971fe4c19d) }

var fileDescriptor_cf1b13971fe4c19d = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xb1, 0x6e, 0xd4, 0x40,
	0x10, 0x86, 0xbd, 0x17, 0x88, 0x94, 0x41, 0xc9, 0x39, 0xab, 0x5c, 0xe4, 0x9c, 0x22, 0x13, 0xb9,
	0x82, 0x14, 0x57, 0x04, 0x24, 0x7a, 0x8e, 0x44, 0x72, 0x01, 0x12, 0x56, 0x10, 0xa5, 0x65, 0xef,
	0x4e, 0xa2, 0x4b, 0xa2, 0x1d, 0x33, 0x5e, 0x0b, 0x42, 0x47, 0x41, 0xcf, 0x43, 0x20, 0x9e, 0x85,
	0x32, 0x25, 0x25, 0xba, 0x7b, 0x11, 0xb4, 0xc6, 0x5b, 0xf8, 0x70, 0x43, 0x93, 0x6e, 0xf5, 0xcd,
	0x3f, 0xbf, 0xe6, 0xd7, 0xcc, 0xc2, 0x98, 0xb1, 0xa6, 0x86, 0x15, 0xd6, 0xb3, 0x8a, 0xc9, 0x92,
	0x1c, 0x55, 0x65, 0xf2, 0x43, 0xc0, 0x64, 0xce, 0x58, 0x58, 0xcc, 0xba, 0x6a, 0x86, 0x1f, 0x1a,
	0xac, 0xad, 0x7c, 0x0c, 0x8f, 0x7c, 0x43, 0xbe, 0xd0, 0x91, 0x38, 0x12, 0x4f, 0xb6, 0x32, 0xf0,
	0x28, 0xd5, 0xf2, 0x29, 0x84, 0xca, 0x75, 0x12, 0xe7, 0xf8, 0x09, 0x55, 0x63, 0x89, 0xa3, 0x51,
	0xab, 0x1a, 0x77, 0xfc, 0xb4, 0xc3, 0x72, 0x02, 0x9b, 0x57, 0x54, 0x3a, 0x9b, 0x8d, 0x56, 0xf0,
	0xf0, 0x8a, 0xca, 0x54, 0xcb, 0x63, 0xd8, 0xf5, 0x0e, 0x1f, 0x89, 0xaf, 0x91, 0x9d, 0xe2, 0x41,
	0xcf, 0xe2, 0x7d, 0xcb, 0x53, 0x9d, 0x44, 0xb0, 0xbf, 0x3e, 0x67, 0x5d, 0x91, 0xa9, 0x31, 0x79,
	0x01, 0x7b, 0x6f, 0x1b, 0xe4, 0xdb, 0xff, 0x0d, 0x90, 0x7c, 0x15, 0x30, 0x59, 0xeb, 0xfc, 0x6b,
	0x79, 0xcf, 0xd1, 0x2e, 0x60, 0xdb, 0x4f, 0x70, 0xca, 0x4c, 0x2c, 0x9f, 0x03, 0xa0, 0x7b, 0xe4,
	0x8a, 0x34, 0xb6, 0x83, 0xef, 0x9c, 0x4c, 0x66, 0x55, 0x39, 0xeb, 0xc9, 0xe6, 0xa4, 0x31, 0xdb,
	0x42, 0xff, 0x74, 0x79, 0x6b, 0x5b, 0xa8, 0xeb, 0xdc, 0x72, 0xa1, 0xb0, 0x9b, 0x17, 0x5a, 0x74,
	0xee, 0xc8, 0xf1, 0x17, 0x01, 0xbb, 0xff, 0x38, 0xc8, 0x7d, 0x90, 0x1e, 0xa6, 0xaf, 0xe6, 0x64,
	0x2e, 0x6e, 0x16, 0xca, 0x86, 0x81, 0x3c, 0x84, 0xc8, 0xf3, 0xf3, 0xdb, 0x0a, 0xdf, 0x19, 0x46,
	0x45, 0x97, 0x66, 0xf1, 0x19, 0x75, 0x28, 0xe4, 0x11, 0x1c, 0xfa, 0xea, 0xeb, 0xc2, 0x14, 0x97,
	0xc8, 0xa9, 0xb1, 0xc8, 0xa6, 0xb8, 0x69, 0x9d, 0xc3, 0x91, 0xdc, 0x83, 0xd0, 0x2b, 0xde, 0x90,
	0x3d, 0xa3, 0xc6, 0xe8, 0x70, 0xe3, 0xe4, 0xbb, 0x80, 0xf1, 0x5a, 0xa3, 0x4c, 0x61, 0xa7, 0xbf,
	0x5a, 0x79, 0xe0, 0xc2, 0x0e, 0x9e, 0xe5, 0x74, 0x3a, 0x54, 0xea, 0x2e, 0x21, 0x90, 0x67, 0xb0,
	0xdd, 0xdb, 0xa8, 0x8c, 0x9c, 0x7c, 0xe8, 0x3c, 0xa6, 0x07, 0x03, 0x15, 0xef, 0xf3, 0x32, 0xfa,
	0xb9, 0x8c, 0xc5, 0xdd, 0x32, 0x16, 0xbf, 0x97, 0xb1, 0xf8, 0xb6, 0x8a, 0x83, 0xbb, 0x55, 0x1c,
	0xfc, 0x5a, 0xc5, 0x41, 0xb9, 0xd9, 0xfe, 0x9d, 0x67, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfa,
	0x5b, 0xa9, 0xfb, 0x4e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceManagerClient is the client API for ResourceManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceManagerClient interface {
	CreateResource(ctx context.Context, in *CreateResourceRequest, opts ...grpc.CallOption) (*CreateResourceResponse, error)
	QueryResource(ctx context.Context, in *QueryResourceRequest, opts ...grpc.CallOption) (*QueryResourceResponse, error)
}

type resourceManagerClient struct {
	cc *grpc.ClientConn
}

func NewResourceManagerClient(cc *grpc.ClientConn) ResourceManagerClient {
	return &resourceManagerClient{cc}
}

func (c *resourceManagerClient) CreateResource(ctx context.Context, in *CreateResourceRequest, opts ...grpc.CallOption) (*CreateResourceResponse, error) {
	out := new(CreateResourceResponse)
	err := c.cc.Invoke(ctx, "/pb.ResourceManager/CreateResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceManagerClient) QueryResource(ctx context.Context, in *QueryResourceRequest, opts ...grpc.CallOption) (*QueryResourceResponse, error) {
	out := new(QueryResourceResponse)
	err := c.cc.Invoke(ctx, "/pb.ResourceManager/QueryResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceManagerServer is the server API for ResourceManager service.
type ResourceManagerServer interface {
	CreateResource(context.Context, *CreateResourceRequest) (*CreateResourceResponse, error)
	QueryResource(context.Context, *QueryResourceRequest) (*QueryResourceResponse, error)
}

// UnimplementedResourceManagerServer can be embedded to have forward compatible implementations.
type UnimplementedResourceManagerServer struct {
}

func (*UnimplementedResourceManagerServer) CreateResource(ctx context.Context, req *CreateResourceRequest) (*CreateResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateResource not implemented")
}
func (*UnimplementedResourceManagerServer) QueryResource(ctx context.Context, req *QueryResourceRequest) (*QueryResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryResource not implemented")
}

func RegisterResourceManagerServer(s *grpc.Server, srv ResourceManagerServer) {
	s.RegisterService(&_ResourceManager_serviceDesc, srv)
}

func _ResourceManager_CreateResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).CreateResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ResourceManager/CreateResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).CreateResource(ctx, req.(*CreateResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceManager_QueryResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceManagerServer).QueryResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ResourceManager/QueryResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceManagerServer).QueryResource(ctx, req.(*QueryResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ResourceManager",
	HandlerType: (*ResourceManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateResource",
			Handler:    _ResourceManager_CreateResource_Handler,
		},
		{
			MethodName: "QueryResource",
			Handler:    _ResourceManager_QueryResource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "resources.proto",
}

func (m *CreateResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CreatorWorkerId) > 0 {
		i -= len(m.CreatorWorkerId)
		copy(dAtA[i:], m.CreatorWorkerId)
		i = encodeVarintResources(dAtA, i, uint64(len(m.CreatorWorkerId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.JobId) > 0 {
		i -= len(m.JobId)
		copy(dAtA[i:], m.JobId)
		i = encodeVarintResources(dAtA, i, uint64(len(m.JobId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CreatorExecutor) > 0 {
		i -= len(m.CreatorExecutor)
		copy(dAtA[i:], m.CreatorExecutor)
		i = encodeVarintResources(dAtA, i, uint64(len(m.CreatorExecutor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintResources(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintResources(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CreatorWorkerId) > 0 {
		i -= len(m.CreatorWorkerId)
		copy(dAtA[i:], m.CreatorWorkerId)
		i = encodeVarintResources(dAtA, i, uint64(len(m.CreatorWorkerId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.JobId) > 0 {
		i -= len(m.JobId)
		copy(dAtA[i:], m.JobId)
		i = encodeVarintResources(dAtA, i, uint64(len(m.JobId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CreatorExecutor) > 0 {
		i -= len(m.CreatorExecutor)
		copy(dAtA[i:], m.CreatorExecutor)
		i = encodeVarintResources(dAtA, i, uint64(len(m.CreatorExecutor)))
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *ResourceError) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceError) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceError) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StackTrace) > 0 {
		i -= len(m.StackTrace)
		copy(dAtA[i:], m.StackTrace)
		i = encodeVarintResources(dAtA, i, uint64(len(m.StackTrace)))
		i--
		dAtA[i] = 0x12
	}
	if m.ErrorCode != 0 {
		i = encodeVarintResources(dAtA, i, uint64(m.ErrorCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintResources(dAtA []byte, offset int, v uint64) int {
	offset -= sovResources(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	l = len(m.CreatorExecutor)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	l = len(m.JobId)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	l = len(m.CreatorWorkerId)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	return n
}

func (m *CreateResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	return n
}

func (m *QueryResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorExecutor)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	l = len(m.JobId)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	l = len(m.CreatorWorkerId)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	return n
}

func (m *ResourceError) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ErrorCode != 0 {
		n += 1 + sovResources(uint64(m.ErrorCode))
	}
	l = len(m.StackTrace)
	if l > 0 {
		n += 1 + l + sovResources(uint64(l))
	}
	return n
}

func sovResources(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozResources(x uint64) (n int) {
	return sovResources(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResources
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorExecutor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorExecutor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JobId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorWorkerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorWorkerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResources(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResources
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResources
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipResources(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResources
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResources
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResources(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResources
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResources
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorExecutor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorExecutor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JobId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorWorkerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorWorkerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResources(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResources
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceError) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResources
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceError: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceError: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= ResourceErrorCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StackTrace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResources
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResources
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResources
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StackTrace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResources(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResources
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipResources(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowResources
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResources
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResources
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthResources
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupResources
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthResources
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthResources        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowResources          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupResources = fmt.Errorf("proto: unexpected end of group")
)
