# AUTOGENERATED BY github.com/pingcap/errors/errdoc-gen
# YOU CAN CHANGE THE 'description'/'workaround' FIELDS IF THEM ARE IMPROPER.

["CDC:ErrAPIInvalidParam"]
error = '''
invalid api parameter
'''

["CDC:ErrAdminStopProcessor"]
error = '''
stop processor by admin command
'''

["CDC:ErrAsyncBroadcaseNotSupport"]
error = '''
Async broadcasts not supported
'''

["CDC:ErrAsyncPoolExited"]
error = '''
asyncPool has exited. Report a bug if seen externally.
'''

["CDC:ErrAvroEncodeFailed"]
error = '''
encode to avro native data
'''

["CDC:ErrAvroEncodeToBinary"]
error = '''
encode to binray from native
'''

["CDC:ErrAvroMarshalFailed"]
error = '''
json marshal failed
'''

["CDC:ErrAvroSchemaAPIError"]
error = '''
schema manager API error
'''

["CDC:ErrAvroToEnvelopeError"]
error = '''
to envelope failed
'''

["CDC:ErrAvroUnknownType"]
error = '''
unknown type for Avro: %v
'''

["CDC:ErrBufferReachLimit"]
error = '''
puller mem buffer reach size limit
'''

["CDC:ErrCachedTSONotExists"]
error = '''
GetCachedCurrentVersion: cache entry does not exist
'''

["CDC:ErrCanalDecodeFailed"]
error = '''
canal decode failed
'''

["CDC:ErrCanalEncodeFailed"]
error = '''
canal encode failed
'''

["CDC:ErrCaptureCampaignOwner"]
error = '''
campaign owner failed
'''

["CDC:ErrCaptureNotExist"]
error = '''
capture not exists, key: %s
'''

["CDC:ErrCaptureRegister"]
error = '''
capture register to etcd failed
'''

["CDC:ErrCaptureResignOwner"]
error = '''
resign owner failed
'''

["CDC:ErrCaptureSuicide"]
error = '''
capture suicide
'''

["CDC:ErrChangeFeedAlreadyExists"]
error = '''
changefeed already exists, key: %s
'''

["CDC:ErrChangeFeedNotExists"]
error = '''
changefeed not exists, key: %s
'''

["CDC:ErrChangefeedAbnormalState"]
error = '''
changefeed in abnormal state: %s, replication status: %+v
'''

["CDC:ErrCheckClusterVersionFromPD"]
error = '''
failed to request PD
'''

["CDC:ErrCheckDirWritable"]
error = '''
check dir writable failed
'''

["CDC:ErrCodecDecode"]
error = '''
codec decode error
'''

["CDC:ErrCreateMarkTableFailed"]
error = '''
create mark table failed
'''

["CDC:ErrDDLEventIgnored"]
error = '''
ddl event is ignored
'''

["CDC:ErrDatumUnflatten"]
error = '''
unflatten datume data
'''

["CDC:ErrDecodeFailed"]
error = '''
decode failed: %s
'''

["CDC:ErrDecodeRowToDatum"]
error = '''
decode row data to datum failed
'''

["CDC:ErrEncodeFailed"]
error = '''
encode failed: %s
'''

["CDC:ErrEtcdIgnore"]
error = '''
this patch should be excluded from the current etcd txn
'''

["CDC:ErrEtcdSessionDone"]
error = '''
the etcd session is done
'''

["CDC:ErrEtcdTryAgain"]
error = '''
the etcd txn should be aborted and retried immediately
'''

["CDC:ErrEventFeedAborted"]
error = '''
single event feed aborted
'''

["CDC:ErrEventFeedEventError"]
error = '''
eventfeed returns event error
'''

["CDC:ErrExecDDLFailed"]
error = '''
exec DDL failed
'''

["CDC:ErrFetchHandleValue"]
error = '''
can't find handle column, please check if the pk is handle
'''

["CDC:ErrFileSinkCreateDir"]
error = '''
file sink create dir
'''

["CDC:ErrFileSinkFileOp"]
error = '''
file sink file operation
'''

["CDC:ErrFileSinkMetaAlreadyExists"]
error = '''
file sink meta file already exists
'''

["CDC:ErrFileSorterDecode"]
error = '''
decode failed
'''

["CDC:ErrFileSorterEncode"]
error = '''
encode failed
'''

["CDC:ErrFileSorterInvalidData"]
error = '''
invalid data
'''

["CDC:ErrFileSorterOpenFile"]
error = '''
open file failed
'''

["CDC:ErrFileSorterReadFile"]
error = '''
read file failed
'''

["CDC:ErrFileSorterWriteFile"]
error = '''
write file failed
'''

["CDC:ErrFilterRuleInvalid"]
error = '''
filter rule is invalid
'''

["CDC:ErrGRPCDialFailed"]
error = '''
grpc dial failed
'''

["CDC:ErrGetAllStoresFailed"]
error = '''
get stores from pd failed
'''

["CDC:ErrGetRegionFailed"]
error = '''
get region failed
'''

["CDC:ErrGetStoreSnapshot"]
error = '''
get snapshot failed
'''

["CDC:ErrGetTiKVRPCContext"]
error = '''
get tikv grpc context failed
'''

["CDC:ErrIndexKeyTableNotFound"]
error = '''
table not found with index ID %d in index kv
'''

["CDC:ErrInternalServerError"]
error = '''
internal server error
'''

["CDC:ErrIntersectNoOverlap"]
error = '''
span doesn't overlap: %+v vs %+v
'''

["CDC:ErrInvalidAdminJobType"]
error = '''
invalid admin job type: %d
'''

["CDC:ErrInvalidChangefeedID"]
error = '''
bad changefeed id, please match the pattern "^[a-zA-Z0-9]+(\-[a-zA-Z0-9]+)*$", eg, "simple-changefeed-task"
'''

["CDC:ErrInvalidEtcdKey"]
error = '''
invalid key: %s
'''

["CDC:ErrInvalidRecordKey"]
error = '''
invalid record key - %q
'''

["CDC:ErrInvalidServerOption"]
error = '''
invalid server option
'''

["CDC:ErrInvalidTaskKey"]
error = '''
invalid task key: %s
'''

["CDC:ErrJSONCodecInvalidData"]
error = '''
json codec invalid data
'''

["CDC:ErrKVStorageBackoffFailed"]
error = '''
backoff failed
'''

["CDC:ErrKVStorageRegionError"]
error = '''
req with region error
'''

["CDC:ErrKVStorageRespEmpty"]
error = '''
tikv response body missing
'''

["CDC:ErrKVStorageSendReq"]
error = '''
send req to kv storage
'''

["CDC:ErrKafkaAsyncSendMessage"]
error = '''
kafka async send message failed
'''

["CDC:ErrKafkaFlushUnfished"]
error = '''
flush not finished before producer close
'''

["CDC:ErrKafkaInvalidClientID"]
error = '''
invalid kafka client ID '%s'
'''

["CDC:ErrKafkaInvalidConfig"]
error = '''
kafka config invalid
'''

["CDC:ErrKafkaInvalidPartitionNum"]
error = '''
invalid partition num %d
'''

["CDC:ErrKafkaInvalidVersion"]
error = '''
invalid kafka version
'''

["CDC:ErrKafkaNewSaramaProducer"]
error = '''
new sarama producer
'''

["CDC:ErrKafkaSendMessage"]
error = '''
kafka send message failed
'''

["CDC:ErrLoadTimezone"]
error = '''
load timezone
'''

["CDC:ErrLocateRegion"]
error = '''
locate region by id
'''

["CDC:ErrMarshalFailed"]
error = '''
marshal failed
'''

["CDC:ErrMaxwellDecodeFailed"]
error = '''
maxwell decode failed
'''

["CDC:ErrMaxwellEncodeFailed"]
error = '''
maxwell encode failed
'''

["CDC:ErrMaxwellInvalidData"]
error = '''
maxwell invalid data
'''

["CDC:ErrMetaListDatabases"]
error = '''
meta store list databases
'''

["CDC:ErrMetaNotInRegion"]
error = '''
meta not exists in region
'''

["CDC:ErrMySQLConnectionError"]
error = '''
MySQL connection error
'''

["CDC:ErrMySQLInvalidConfig"]
error = '''
MySQL config invaldi
'''

["CDC:ErrMySQLQueryError"]
error = '''
MySQL query error
'''

["CDC:ErrMySQLTxnError"]
error = '''
MySQL txn error
'''

["CDC:ErrMySQLWorkerPanic"]
error = '''
MySQL worker panic
'''

["CDC:ErrNewCaptureFailed"]
error = '''
new capture failed
'''

["CDC:ErrNewProcessorFailed"]
error = '''
new processor failed
'''

["CDC:ErrNewSemVersion"]
error = '''
create sem version
'''

["CDC:ErrNewStore"]
error = '''
new store failed
'''

["CDC:ErrNoPendingRegion"]
error = '''
received event regionID %v, requestID %v from %v, but neither pending region nor running region was found
'''

["CDC:ErrOldValueNotEnabled"]
error = '''
old value is not enabled
'''

["CDC:ErrOperateOnClosedNotifier"]
error = '''
operate on a closed notifier
'''

["CDC:ErrOwnerCampaignKeyDeleted"]
error = '''
owner campaign key deleted
'''

["CDC:ErrOwnerChangefeedNotFound"]
error = '''
changefeed %s not found in owner cache
'''

["CDC:ErrOwnerEtcdWatch"]
error = '''
etcd watch returns error
'''

["CDC:ErrOwnerInconsistentStates"]
error = '''
owner encountered inconsistent state. report a bug if this happens frequently. %s
'''

["CDC:ErrOwnerSortDir"]
error = '''
owner sort dir
'''

["CDC:ErrPDBatchLoadRegions"]
error = '''
pd batch load regions failed
'''

["CDC:ErrPDEtcdAPIError"]
error = '''
etcd api call error
'''

["CDC:ErrPendingRegionCancel"]
error = '''
pending region cancelled due to stream disconnecting
'''

["CDC:ErrPrepareAvroFailed"]
error = '''
prepare avro failed
'''

["CDC:ErrPrewriteNotMatch"]
error = '''
prewrite not match, key: %b, start-ts: %d
'''

["CDC:ErrProcessorEtcdWatch"]
error = '''
etcd watch returns error
'''

["CDC:ErrProcessorSortDir"]
error = '''
sort dir error
'''

["CDC:ErrProcessorTableNotFound"]
error = '''
table not found in processor cache
'''

["CDC:ErrProcessorUnknown"]
error = '''
processor running unknown error
'''

["CDC:ErrPulsarNewProducer"]
error = '''
new pulsar producer
'''

["CDC:ErrPulsarSendMessage"]
error = '''
pulsar send message failed
'''

["CDC:ErrReactorFinished"]
error = '''
the reactor has done its job and should no longer be executed
'''

["CDC:ErrRegionsNotCoverSpan"]
error = '''
regions not completely left cover span, span %v regions: %v
'''

["CDC:ErrResolveLocks"]
error = '''
resolve locks failed
'''

["CDC:ErrS3SinkInitialzie"]
error = '''
new s3 sink
'''

["CDC:ErrS3SinkStorageAPI"]
error = '''
s3 sink storage api
'''

["CDC:ErrS3SinkWriteStorage"]
error = '''
write to storage
'''

["CDC:ErrScanLockFailed"]
error = '''
scan lock failed
'''

["CDC:ErrSchemaSnapshotNotFound"]
error = '''
can not found schema snapshot, ts: %d
'''

["CDC:ErrSchemaStorageGCed"]
error = '''
can not found schema snapshot, the specified ts(%d) is less than gcTS(%d)
'''

["CDC:ErrSchemaStorageTableMiss"]
error = '''
table %d not found
'''

["CDC:ErrSchemaStorageUnresolved"]
error = '''
can not found schema snapshot, the specified ts(%d) is more than resolvedTs(%d)
'''

["CDC:ErrSendToClosedPipeline"]
error = '''
pipeline is closed, cannot send message
'''

["CDC:ErrServeHTTP"]
error = '''
serve http error
'''

["CDC:ErrServerNewPDClient"]
error = '''
server creates pd client failed
'''

["CDC:ErrServiceSafepointLost"]
error = '''
service safepoint lost. current safepoint is %d, please remove all changefeed(s) whose checkpoints are behind the current safepoint
'''

["CDC:ErrSinkURIInvalid"]
error = '''
sink uri invalid
'''

["CDC:ErrSnapshotSchemaExists"]
error = '''
schema %s(%d) already exists
'''

["CDC:ErrSnapshotSchemaNotFound"]
error = '''
schema %d not found in schema snapshot
'''

["CDC:ErrSnapshotTableExists"]
error = '''
table %s.%s already exists
'''

["CDC:ErrSnapshotTableNotFound"]
error = '''
table %d not found in schema snapshot
'''

["CDC:ErrStartTsBeforeGC"]
error = '''
fail to create changefeed because start-ts %d is earlier than GC safepoint at %d
'''

["CDC:ErrSupportPostOnly"]
error = '''
this api supports POST method only
'''

["CDC:ErrTableProcessorStoppedSafely"]
error = '''
table processor stopped safely
'''

["CDC:ErrTaskPositionNotExists"]
error = '''
task position not exists, key: %s
'''

["CDC:ErrTaskStatusNotExists"]
error = '''
task status not exists, key: %s
'''

["CDC:ErrTiKVEventFeed"]
error = '''
tikv event feed failed
'''

["CDC:ErrToTLSConfigFailed"]
error = '''
generate tls config failed
'''

["CDC:ErrURLFormatInvalid"]
error = '''
url format is invalid
'''

["CDC:ErrUnifiedSorterBackendTerminating"]
error = '''
unified sorter backend is terminating
'''

["CDC:ErrUnknownKVEventType"]
error = '''
unknown kv event type: %v, entry: %v
'''

["CDC:ErrUnknownMetaType"]
error = '''
unknown meta type %v
'''

["CDC:ErrUnknownSortEngine"]
error = '''
unknown sort engine %s
'''

["CDC:ErrUnmarshalFailed"]
error = '''
unmarshal failed
'''

["CDC:ErrUpdateServiceSafepointFailed"]
error = '''
updating service safepoint failed
'''

["CDC:ErrVersionIncompatible"]
error = '''
version is incompatible: %s
'''

["CDC:ErrWaitHandleOperationTimeout"]
error = '''
waiting processor to handle the operation finished timeout
'''

["CDC:ErrWorkerPoolEmptyTask"]
error = '''
workerpool received an empty task, please report a bug
'''

["CDC:ErrWorkerPoolHandleCancelled"]
error = '''
workerpool handle is cancelled
'''

["CDC:ErrWriteTsConflict"]
error = '''
write ts conflict
'''

["CDC:ErrWrongTableInfo"]
error = '''
wrong table info in unflatten, table id %d, index table id: %d
'''

