definitions:
  config.CSVConfig:
    properties:
      delimiter:
        description: delimiter between fields
        type: string
      include-commit-ts:
        description: whether to include commit ts
        type: boolean
      "null":
        description: representation of null values
        type: string
      quote:
        description: quoting character
        type: string
    type: object
  config.CloudStorageConfig:
    properties:
      file-size:
        type: integer
      flush-interval:
        type: string
      worker-count:
        type: integer
    type: object
  config.CodecConfig:
    properties:
      avro-bigint-unsigned-handling-mode:
        type: string
      avro-decimal-handling-mode:
        type: string
      avro-enable-watermark:
        type: boolean
      enable-tidb-extension:
        type: boolean
      max-batch-size:
        type: integer
    type: object
  config.ColumnSelector:
    properties:
      columns:
        items:
          type: string
        type: array
      matcher:
        items:
          type: string
        type: array
    type: object
  config.DispatchRule:
    properties:
      dispatcher:
        description: Deprecated, please use PartitionRule.
        type: string
      matcher:
        items:
          type: string
        type: array
      partition:
        description: |-
          PartitionRule is an alias added for DispatcherRule to mitigate confusions.
          In the future release, the DispatcherRule is expected to be removed .
        type: string
      topic:
        type: string
    type: object
  config.KafkaConfig:
    properties:
      auto-create-topic:
        type: boolean
      ca:
        type: string
      cert:
        type: string
      codec-config:
        $ref: '#/definitions/config.CodecConfig'
      compression:
        type: string
      dial-timeout:
        type: string
      enable-tls:
        type: boolean
      insecure-skip-verify:
        type: boolean
      kafka-client-id:
        type: string
      kafka-version:
        type: string
      key:
        type: string
      max-message-bytes:
        type: integer
      partition-num:
        type: integer
      read-timeout:
        type: string
      replication-factor:
        type: integer
      required-acks:
        type: integer
      sasl-gssapi-auth-type:
        type: string
      sasl-gssapi-disable-pafxfast:
        type: boolean
      sasl-gssapi-kerberos-config-path:
        type: string
      sasl-gssapi-keytab-path:
        type: string
      sasl-gssapi-password:
        type: string
      sasl-gssapi-realm:
        type: string
      sasl-gssapi-service-name:
        type: string
      sasl-gssapi-user:
        type: string
      sasl-mechanism:
        type: string
      sasl-oauth-audience:
        type: string
      sasl-oauth-client-id:
        type: string
      sasl-oauth-client-secret:
        type: string
      sasl-oauth-grant-type:
        type: string
      sasl-oauth-scopes:
        items:
          type: string
        type: array
      sasl-oauth-token-url:
        type: string
      sasl-password:
        type: string
      sasl-user:
        type: string
      write-timeout:
        type: string
    type: object
  config.MySQLConfig:
    properties:
      enable-batch-dml:
        type: boolean
      enable-cache-prepared-statement:
        type: boolean
      enable-multi-statement:
        type: boolean
      max-multi-update-row:
        type: integer
      max-multi-update-row-size:
        type: integer
      max-txn-row:
        type: integer
      read-timeout:
        type: string
      ssl-ca:
        type: string
      ssl-cert:
        type: string
      ssl-key:
        type: string
      tidb-txn-mode:
        type: string
      time-zone:
        type: string
      timeout:
        type: string
      worker-count:
        type: integer
      write-timeout:
        type: string
    type: object
  config.SinkConfig:
    properties:
      cloud-storage-config:
        $ref: '#/definitions/config.CloudStorageConfig'
      column-selectors:
        description: ColumnSelectors is Deprecated.
        items:
          $ref: '#/definitions/config.ColumnSelector'
        type: array
      csv:
        $ref: '#/definitions/config.CSVConfig'
        description: CSVConfig is only available when the downstream is Storage.
      date-separator:
        description: DateSeparator is only available when the downstream is Storage.
        type: string
      dispatchers:
        description: DispatchRules is only available when the downstream is MQ.
        items:
          $ref: '#/definitions/config.DispatchRule'
        type: array
      enable-kafka-sink-v2:
        description: |-
          EnableKafkaSinkV2 enabled then the kafka-go sink will be used.
          It is only available when the downstream is MQ.
        type: boolean
      enable-partition-separator:
        description: EnablePartitionSeparator is only available when the downstream
          is Storage.
        type: boolean
      encoder-concurrency:
        description: EncoderConcurrency is only available when the downstream is MQ.
        type: integer
      file-index-digit:
        description: FileIndexWidth is only available when the downstream is Storage
        type: integer
      kafka-config:
        $ref: '#/definitions/config.KafkaConfig'
      mysql-config:
        $ref: '#/definitions/config.MySQLConfig'
      only-output-updated-columns:
        description: OnlyOutputUpdatedColumns is only available when the downstream
          is MQ.
        type: boolean
      protocol:
        description: Protocol is NOT available when the downstream is DB.
        type: string
      safe-mode:
        description: SafeMode is only available when the downstream is DB.
        type: boolean
      schema-registry:
        description: SchemaRegistry is only available when the downstream is MQ using
          avro protocol.
        type: string
      terminator:
        description: Terminator is NOT available when the downstream is DB.
        type: string
      transaction-atomicity:
        type: string
    type: object
  model.Capture:
    properties:
      address:
        type: string
      cluster_id:
        type: string
      id:
        type: string
      is_owner:
        type: boolean
    type: object
  model.CaptureTaskStatus:
    properties:
      capture_id:
        type: string
      table_ids:
        description: Table list, containing tables that processor should process
        items:
          type: integer
        type: array
      table_operations:
        additionalProperties:
          $ref: '#/definitions/model.TableOperation'
        type: object
    type: object
  model.ChangefeedCommonInfo:
    properties:
      checkpoint_time:
        type: string
      checkpoint_tso:
        type: integer
      error:
        $ref: '#/definitions/model.RunningError'
      id:
        type: string
      namespace:
        type: string
      state:
        type: string
      upstream_id:
        type: integer
    type: object
  model.ChangefeedConfig:
    properties:
      changefeed_id:
        type: string
      filter_rules:
        items:
          type: string
        type: array
      force_replicate:
        default: false
        description: if true, force to replicate some ineligible tables
        type: boolean
      ignore_ineligible_table:
        default: false
        type: boolean
      ignore_txn_start_ts:
        items:
          type: integer
        type: array
      mounter_worker_num:
        default: 16
        type: integer
      namespace:
        type: string
      sink_config:
        $ref: '#/definitions/config.SinkConfig'
      sink_uri:
        type: string
      start_ts:
        type: integer
      target_ts:
        type: integer
      timezone:
        default: system
        description: timezone used when checking sink uri
        type: string
    type: object
  model.ChangefeedDetail:
    properties:
      checkpoint_time:
        type: string
      checkpoint_tso:
        type: integer
      create_time:
        type: string
      creator_version:
        type: string
      error:
        $ref: '#/definitions/model.RunningError'
      error_history:
        items:
          type: integer
        type: array
      id:
        type: string
      namespace:
        type: string
      resolved_ts:
        type: integer
      sink_uri:
        type: string
      sort_engine:
        type: string
      start_ts:
        type: integer
      state:
        type: string
      target_ts:
        type: integer
      task_status:
        items:
          $ref: '#/definitions/model.CaptureTaskStatus'
        type: array
      upstream_id:
        type: integer
    type: object
  model.HTTPError:
    properties:
      error_code:
        type: string
      error_msg:
        type: string
    type: object
  model.MoveTableReq:
    properties:
      capture_id:
        type: string
      table_id:
        type: integer
    type: object
  model.ProcessorCommonInfo:
    properties:
      capture_id:
        type: string
      changefeed_id:
        type: string
      namespace:
        type: string
    type: object
  model.ProcessorDetail:
    properties:
      table_ids:
        description: All table ids that this processor are replicating.
        items:
          type: integer
        type: array
    type: object
  model.RunningError:
    properties:
      addr:
        type: string
      code:
        type: string
      message:
        type: string
      time:
        type: string
    type: object
  model.ServerStatus:
    properties:
      cluster_id:
        type: string
      git_hash:
        type: string
      id:
        type: string
      is_owner:
        type: boolean
      liveness:
        type: integer
      pid:
        type: integer
      version:
        type: string
    type: object
  model.TableOperation:
    properties:
      boundary_ts:
        description: |-
          if the operation is a delete operation, BoundaryTs is checkpoint ts
          if the operation is an add operation, BoundaryTs is start ts
        type: integer
      delete:
        type: boolean
      flag:
        type: integer
      status:
        type: integer
    type: object
  v2.CSVConfig:
    properties:
      delimiter:
        type: string
      include_commit_ts:
        type: boolean
      "null":
        type: string
      quote:
        type: string
    type: object
  v2.Capture:
    properties:
      address:
        type: string
      cluster_id:
        type: string
      id:
        type: string
      is_owner:
        type: boolean
    type: object
  v2.ChangeFeedInfo:
    properties:
      admin_job_type:
        description: used for admin job notification, trigger watch event in capture
        type: integer
      checkpoint_time:
        type: string
      checkpoint_ts:
        type: integer
      config:
        $ref: '#/definitions/v2.ReplicaConfig'
      create_time:
        type: string
      creator_version:
        type: string
      error:
        $ref: '#/definitions/v2.RunningError'
      id:
        type: string
      namespace:
        type: string
      resolved_ts:
        type: integer
      sink_uri:
        type: string
      start_ts:
        description: Start sync at this commit ts if `StartTs` is specify or using
          the CreateTime of changefeed.
        type: integer
      state:
        type: string
      target_ts:
        description: The ChangeFeed will exits until sync to timestamp TargetTs
        type: integer
      task_status:
        items:
          $ref: '#/definitions/model.CaptureTaskStatus'
        type: array
      upstream_id:
        type: integer
    type: object
  v2.ChangefeedCommonInfo:
    properties:
      checkpoint_time:
        type: string
      checkpoint_tso:
        type: integer
      error:
        $ref: '#/definitions/model.RunningError'
      id:
        type: string
      namespace:
        type: string
      state:
        type: string
      upstream_id:
        type: integer
    type: object
  v2.ChangefeedConfig:
    properties:
      ca_path:
        type: string
      cert_allowed_cn:
        items:
          type: string
        type: array
      cert_path:
        type: string
      changefeed_id:
        type: string
      key_path:
        type: string
      namespace:
        type: string
      pd_addrs:
        items:
          type: string
        type: array
      replica_config:
        $ref: '#/definitions/v2.ReplicaConfig'
      sink_uri:
        type: string
      start_ts:
        type: integer
      target_ts:
        type: integer
    type: object
  v2.ChangefeedSchedulerConfig:
    properties:
      enable_table_across_nodes:
        description: |-
          EnableTableAcrossNodes set true to split one table to multiple spans and
          distribute to multiple TiCDC nodes.
        type: boolean
      region_threshold:
        description: RegionThreshold is the region count threshold of splitting a
          table.
        type: integer
      write_key_threshold:
        description: WriteKeyThreshold is the written keys threshold of splitting
          a table.
        type: integer
    type: object
  v2.CloudStorageConfig:
    properties:
      file_size:
        type: integer
      flush_interval:
        type: string
      worker_count:
        type: integer
    type: object
  v2.CodecConfig:
    properties:
      avro_bigint_unsigned_handling_mode:
        type: string
      avro_decimal_handling_mode:
        type: string
      avro_enable_watermark:
        type: boolean
      enable_tidb_extension:
        type: boolean
      max_batch_size:
        type: integer
    type: object
  v2.ColumnSelector:
    properties:
      columns:
        items:
          type: string
        type: array
      matcher:
        items:
          type: string
        type: array
    type: object
  v2.ConsistentConfig:
    properties:
      flush_interval:
        type: integer
      level:
        type: string
      max_log_size:
        type: integer
      storage:
        type: string
      use_file_backend:
        type: boolean
    type: object
  v2.DispatchRule:
    properties:
      matcher:
        items:
          type: string
        type: array
      partition:
        type: string
      topic:
        type: string
    type: object
  v2.EmptyResponse:
    type: object
  v2.EventFilterRule:
    properties:
      ignore_delete_value_expr:
        type: string
      ignore_event:
        items:
          type: string
        type: array
      ignore_insert_value_expr:
        description: sql expression
        type: string
      ignore_sql:
        description: regular expression
        items:
          type: string
        type: array
      ignore_update_new_value_expr:
        type: string
      ignore_update_old_value_expr:
        type: string
      matcher:
        items:
          type: string
        type: array
    type: object
  v2.FilterConfig:
    properties:
      do_dbs:
        description: DoDBs is an allowlist of schemas.
        items:
          type: string
        type: array
      do_tables:
        description: DoTables is an allowlist of tables.
        items:
          $ref: '#/definitions/v2.Table'
        type: array
      event_filters:
        items:
          $ref: '#/definitions/v2.EventFilterRule'
        type: array
      ignore_dbs:
        description: IgnoreDBs is a blocklist of schemas.
        items:
          type: string
        type: array
      ignore_tables:
        description: IgnoreTables is a blocklist of tables.
        items:
          $ref: '#/definitions/v2.Table'
        type: array
      ignore_txn_start_ts:
        items:
          type: integer
        type: array
      rules:
        items:
          type: string
        type: array
    type: object
  v2.IntegrityConfig:
    properties:
      corruption_handle_level:
        type: string
      integrity_check_level:
        type: string
    type: object
  v2.KafkaConfig:
    properties:
      auto_create_topic:
        type: boolean
      ca:
        type: string
      cert:
        type: string
      codec_config:
        $ref: '#/definitions/v2.CodecConfig'
      compression:
        type: string
      dial_timeout:
        type: string
      enable_tls:
        type: boolean
      insecure_skip_verify:
        type: boolean
      kafka_client_id:
        type: string
      kafka_version:
        type: string
      key:
        type: string
      max_message_bytes:
        type: integer
      partition_num:
        type: integer
      read_timeout:
        type: string
      replication_factor:
        type: integer
      required_acks:
        type: integer
      sasl_gssapi_auth_type:
        type: string
      sasl_gssapi_disable_pafxfast:
        type: boolean
      sasl_gssapi_kerberos_config_path:
        type: string
      sasl_gssapi_keytab_path:
        type: string
      sasl_gssapi_password:
        type: string
      sasl_gssapi_realm:
        type: string
      sasl_gssapi_service_name:
        type: string
      sasl_gssapi_user:
        type: string
      sasl_mechanism:
        type: string
      sasl_oauth_audience:
        type: string
      sasl_oauth_client_id:
        type: string
      sasl_oauth_client_secret:
        type: string
      sasl_oauth_grant_type:
        type: string
      sasl_oauth_scopes:
        items:
          type: string
        type: array
      sasl_oauth_token_url:
        type: string
      sasl_password:
        type: string
      sasl_user:
        type: string
      write_timeout:
        type: string
    type: object
  v2.LogLevelReq:
    properties:
      log_level:
        type: string
    type: object
  v2.MounterConfig:
    properties:
      worker_num:
        type: integer
    type: object
  v2.MySQLConfig:
    properties:
      enable_batch_dml:
        type: boolean
      enable_cache_prepared_statement:
        type: boolean
      enable_multi_statement:
        type: boolean
      max_multi_update_row_count:
        type: integer
      max_multi_update_row_size:
        type: integer
      max_txn_row:
        type: integer
      read_timeout:
        type: string
      ssl_ca:
        type: string
      ssl_cert:
        type: string
      ssl_key:
        type: string
      tidb_txn_mode:
        type: string
      time_zone:
        type: string
      timeout:
        type: string
      worker_count:
        type: integer
      write_timeout:
        type: string
    type: object
  v2.ProcessorCommonInfo:
    properties:
      capture_id:
        type: string
      changefeed_id:
        type: string
      namespace:
        type: string
    type: object
  v2.ProcessorDetail:
    properties:
      table_ids:
        description: All table ids that this processor are replicating.
        items:
          type: integer
        type: array
    type: object
  v2.ReplicaConfig:
    properties:
      bdr_mode:
        type: boolean
      case_sensitive:
        type: boolean
      check_gc_safe_point:
        type: boolean
      consistent:
        $ref: '#/definitions/v2.ConsistentConfig'
      enable_old_value:
        type: boolean
      enable_sync_point:
        type: boolean
      filter:
        $ref: '#/definitions/v2.FilterConfig'
      force_replicate:
        type: boolean
      ignore_ineligible_table:
        type: boolean
      integrity:
        $ref: '#/definitions/v2.IntegrityConfig'
      memory_quota:
        type: integer
      mounter:
        $ref: '#/definitions/v2.MounterConfig'
      scheduler:
        $ref: '#/definitions/v2.ChangefeedSchedulerConfig'
      sink:
        $ref: '#/definitions/v2.SinkConfig'
      sync_point_interval:
        type: string
      sync_point_retention:
        type: string
    type: object
  v2.ResumeChangefeedConfig:
    properties:
      ca_path:
        type: string
      cert_allowed_cn:
        items:
          type: string
        type: array
      cert_path:
        type: string
      key_path:
        type: string
      overwrite_checkpoint_ts:
        type: integer
      pd_addrs:
        items:
          type: string
        type: array
    type: object
  v2.RunningError:
    properties:
      addr:
        type: string
      code:
        type: string
      message:
        type: string
      time:
        type: string
    type: object
  v2.ServerStatus:
    properties:
      cluster_id:
        type: string
      git_hash:
        type: string
      id:
        type: string
      is_owner:
        type: boolean
      liveness:
        type: integer
      pid:
        type: integer
      version:
        type: string
    type: object
  v2.SinkConfig:
    properties:
      cloud_storage_config:
        $ref: '#/definitions/v2.CloudStorageConfig'
      column_selectors:
        items:
          $ref: '#/definitions/v2.ColumnSelector'
        type: array
      csv:
        $ref: '#/definitions/v2.CSVConfig'
      date_separator:
        type: string
      dispatchers:
        items:
          $ref: '#/definitions/v2.DispatchRule'
        type: array
      enable_kafka_sink_v2:
        type: boolean
      enable_partition_separator:
        type: boolean
      encoder_concurrency:
        type: integer
      file_index_width:
        type: integer
      kafka_config:
        $ref: '#/definitions/v2.KafkaConfig'
      mysql_config:
        $ref: '#/definitions/v2.MySQLConfig'
      only_output_updated_columns:
        type: boolean
      protocol:
        type: string
      safe_mode:
        type: boolean
      schema_registry:
        type: string
      terminator:
        type: string
      transaction_atomicity:
        type: string
    type: object
  v2.Table:
    properties:
      database_name:
        description: Schema is the name of the schema (database) containing this table.
        type: string
      table_name:
        description: Name is the unqualified table name.
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/captures:
    get:
      consumes:
      - application/json
      description: list all captures in cdc cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Capture'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List captures
      tags:
      - capture
  /api/v1/captures/drain:
    put:
      consumes:
      - application/json
      description: Drain all tables at the target captures in cdc cluster
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Drain captures
      tags:
      - capture
  /api/v1/changefeeds:
    get:
      consumes:
      - application/json
      description: list all changefeeds in cdc cluster
      parameters:
      - description: state
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChangefeedCommonInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List changefeed
      tags:
      - changefeed
    post:
      consumes:
      - application/json
      description: create a new changefeed
      parameters:
      - description: changefeed config
        in: body
        name: changefeed
        required: true
        schema:
          $ref: '#/definitions/model.ChangefeedConfig'
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Create changefeed
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}:
    delete:
      consumes:
      - application/json
      description: Remove a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Remove a changefeed
      tags:
      - changefeed
    get:
      consumes:
      - application/json
      description: get detail information of a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChangefeedDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get changefeed
      tags:
      - changefeed
    put:
      consumes:
      - application/json
      description: Update a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: changefeed config
        in: body
        name: changefeedConfig
        required: true
        schema:
          $ref: '#/definitions/model.ChangefeedConfig'
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Update a changefeed
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}/pause:
    post:
      consumes:
      - application/json
      description: Pause a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Pause a changefeed
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}/resume:
    post:
      consumes:
      - application/json
      description: Resume a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Resume a changefeed
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}/tables/move_table:
    post:
      consumes:
      - application/json
      description: move one table to the target capture
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: move table request
        in: body
        name: MoveTable
        required: true
        schema:
          $ref: '#/definitions/model.MoveTableReq'
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: move table
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}/tables/rebalance_table:
    post:
      consumes:
      - application/json
      description: rebalance all tables of a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: rebalance tables
      tags:
      - changefeed
  /api/v1/health:
    get:
      consumes:
      - application/json
      description: check if CDC cluster is health
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Check if CDC cluster is health
      tags:
      - common
  /api/v1/log:
    post:
      consumes:
      - application/json
      description: change TiCDC log level dynamically
      parameters:
      - description: log level
        in: body
        name: log_level
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Change TiCDC log level
      tags:
      - common
  /api/v1/owner/resign:
    post:
      consumes:
      - application/json
      description: notify the current owner to resign
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: notify the owner to resign
      tags:
      - owner
  /api/v1/processors:
    get:
      consumes:
      - application/json
      description: list all processors in the TiCDC cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ProcessorCommonInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List processors
      tags:
      - processor
  /api/v1/processors/{changefeed_id}/{capture_id}:
    get:
      consumes:
      - application/json
      description: get the detail information of a processor
      parameters:
      - description: changefeed ID
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: capture ID
        in: path
        name: capture_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProcessorDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get processor detail information
      tags:
      - processor
  /api/v1/status:
    get:
      consumes:
      - application/json
      description: get the status of a server(capture)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ServerStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get server status
      tags:
      - common
  /api/v2/captures:
    get:
      description: list all captures in cdc cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2.Capture'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List captures
      tags:
      - capture
      - v2
  /api/v2/changefeeds:
    get:
      consumes:
      - application/json
      description: list all changefeeds in cdc cluster
      parameters:
      - description: state
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2.ChangefeedCommonInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List changefeed
      tags:
      - changefeed
      - v2
    post:
      consumes:
      - application/json
      description: create a new changefeed
      parameters:
      - description: changefeed config
        in: body
        name: changefeed
        required: true
        schema:
          $ref: '#/definitions/v2.ChangefeedConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.ChangeFeedInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Create changefeed
      tags:
      - changefeed
      - v2
  /api/v2/changefeeds/{changefeed_id}:
    delete:
      consumes:
      - application/json
      description: Remove a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Remove a changefeed
      tags:
      - changefeed
      - v2
    get:
      consumes:
      - application/json
      description: get detail information of a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.ChangeFeedInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get changefeed
      tags:
      - changefeed
      - v2
    put:
      consumes:
      - application/json
      description: Update a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: changefeed config
        in: body
        name: changefeedConfig
        required: true
        schema:
          $ref: '#/definitions/v2.ChangefeedConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.ChangeFeedInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Update a changefeed
      tags:
      - changefeed
      - v2
  /api/v2/changefeeds/{changefeed_id}/pause:
    post:
      consumes:
      - application/json
      description: Pause a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Pause a changefeed
      tags:
      - changefeed
      - v2
  /api/v2/changefeeds/{changefeed_id}/resume:
    post:
      consumes:
      - application/json
      description: Resume a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: resume config
        in: body
        name: resumeConfig
        required: true
        schema:
          $ref: '#/definitions/v2.ResumeChangefeedConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Resume a changefeed
      tags:
      - changefeed
      - v2
  /api/v2/health:
    get:
      description: Check the health status of a TiCDC cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Check the health status of a TiCDC cluster
      tags:
      - common
      - v2
  /api/v2/log:
    post:
      consumes:
      - application/json
      description: change TiCDC log level dynamically
      parameters:
      - description: log level
        in: body
        name: log_level
        required: true
        schema:
          $ref: '#/definitions/v2.LogLevelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Change TiCDC log level
      tags:
      - common
      - v2
  /api/v2/owner/resign:
    post:
      consumes:
      - application/json
      description: Notify the current owner to resign
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Notify the owner to resign
      tags:
      - owner
      - v2
  /api/v2/processors:
    get:
      description: list all processors in the TiCDC cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2.ProcessorCommonInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List processors
      tags:
      - processor
      - v2
  /api/v2/processors/{changefeed_id}/{capture_id}:
    get:
      description: get the detail information of a processor
      parameters:
      - description: changefeed ID
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: capture ID
        in: path
        name: capture_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.ProcessorDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get processor detail information
      tags:
      - processor
      - v2
  /api/v2/status:
    get:
      consumes:
      - application/json
      description: This API is a synchronous interface. If the request is successful,
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.ServerStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get the status information of a TiCDC node
      tags:
      - common
      - v2
swagger: "2.0"
