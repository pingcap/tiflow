definitions:
  config.CSVConfig:
    properties:
      binary-encoding-method:
        description: encoding method of binary type
        type: string
      delimiter:
        description: delimiter between fields
        type: string
      include-commit-ts:
        description: whether to include commit ts
        type: boolean
      "null":
        description: representation of null values
        type: string
      quote:
        description: quoting character
        type: string
    type: object
  config.ColumnSelector:
    properties:
      columns:
        items:
          type: string
        type: array
      matcher:
        items:
          type: string
        type: array
    type: object
  config.DispatchRule:
    properties:
      dispatcher:
        description: Deprecated, please use PartitionRule.
        type: string
      matcher:
        items:
          type: string
        type: array
      partition:
        description: |-
          PartitionRule is an alias added for DispatcherRule to mitigate confusions.
          In the future release, the DispatcherRule is expected to be removed .
        type: string
      topic:
        type: string
    type: object
  config.KafkaConfig:
    properties:
      large-message-handle:
        $ref: '#/definitions/config.LargeMessageHandleConfig'
      sasl-mechanism:
        type: string
      sasl-oauth-audience:
        type: string
      sasl-oauth-client-id:
        type: string
      sasl-oauth-client-secret:
        type: string
      sasl-oauth-grant-type:
        type: string
      sasl-oauth-scopes:
        items:
          type: string
        type: array
      sasl-oauth-token-url:
        type: string
    type: object
  config.LargeMessageHandleConfig:
    properties:
      large-message-handle-option:
        type: string
    type: object
  config.SinkConfig:
    properties:
      advance-timeout-in-sec:
        description: |-
          AdvanceTimeoutInSec is a duration in second. If a table sink progress hasn't been
          advanced for this given duration, the sink will be canceled and re-established.
        type: integer
      column-selectors:
        items:
          $ref: '#/definitions/config.ColumnSelector'
        type: array
      csv:
        $ref: '#/definitions/config.CSVConfig'
      date-separator:
        type: string
      dispatchers:
        items:
          $ref: '#/definitions/config.DispatchRule'
        type: array
      enable-partition-separator:
        type: boolean
      encoder-concurrency:
        type: integer
      file-index-digit:
        type: integer
      kafka-config:
        $ref: '#/definitions/config.KafkaConfig'
      protocol:
        type: string
      schema-registry:
        type: string
      terminator:
        type: string
      transaction-atomicity:
        type: string
    type: object
  model.Capture:
    properties:
      address:
        type: string
      cluster_id:
        type: string
      id:
        type: string
      is_owner:
        type: boolean
    type: object
  model.CaptureTaskStatus:
    properties:
      capture_id:
        type: string
      table_ids:
        description: Table list, containing tables that processor should process
        items:
          type: integer
        type: array
      table_operations:
        additionalProperties:
          $ref: '#/definitions/model.TableOperation'
        type: object
    type: object
  model.ChangefeedCommonInfo:
    properties:
      checkpoint_time:
        type: string
      checkpoint_tso:
        type: integer
      error:
        $ref: '#/definitions/model.RunningError'
      id:
        type: string
      namespace:
        type: string
      state:
        type: string
      upstream_id:
        type: integer
    type: object
  model.ChangefeedConfig:
    properties:
      changefeed_id:
        type: string
      filter_rules:
        items:
          type: string
        type: array
      force_replicate:
        default: false
        description: if true, force to replicate some ineligible tables
        type: boolean
      ignore_ineligible_table:
        default: false
        type: boolean
      ignore_txn_start_ts:
        items:
          type: integer
        type: array
      mounter_worker_num:
        default: 16
        type: integer
      namespace:
        type: string
      sink_config:
        $ref: '#/definitions/config.SinkConfig'
      sink_uri:
        type: string
      start_ts:
        type: integer
      target_ts:
        type: integer
      timezone:
        default: system
        description: timezone used when checking sink uri
        type: string
    type: object
  model.ChangefeedDetail:
    properties:
      checkpoint_time:
        type: string
      checkpoint_tso:
        type: integer
      create_time:
        type: string
      creator_version:
        type: string
      error:
        $ref: '#/definitions/model.RunningError'
      error_history:
        items:
          type: integer
        type: array
      id:
        type: string
      namespace:
        type: string
      resolved_ts:
        type: integer
      sink_uri:
        type: string
      sort_engine:
        type: string
      start_ts:
        type: integer
      state:
        type: string
      target_ts:
        type: integer
      task_status:
        items:
          $ref: '#/definitions/model.CaptureTaskStatus'
        type: array
      upstream_id:
        type: integer
    type: object
  model.HTTPError:
    properties:
      error_code:
        type: string
      error_msg:
        type: string
    type: object
  model.ProcessorCommonInfo:
    properties:
      capture_id:
        type: string
      changefeed_id:
        type: string
      namespace:
        type: string
    type: object
  model.ProcessorDetail:
    properties:
      table_ids:
        description: All table ids that this processor are replicating.
        items:
          type: integer
        type: array
    type: object
  model.RunningError:
    properties:
      addr:
        type: string
      code:
        type: string
      message:
        type: string
      time:
        type: string
    type: object
  model.ServerStatus:
    properties:
      cluster_id:
        type: string
      git_hash:
        type: string
      id:
        type: string
      is_owner:
        type: boolean
      liveness:
        type: integer
      pid:
        type: integer
      version:
        type: string
    type: object
  model.TableOperation:
    properties:
      boundary_ts:
        description: |-
          if the operation is a delete operation, BoundaryTs is checkpoint ts
          if the operation is an add operation, BoundaryTs is start ts
        type: integer
      delete:
        type: boolean
      flag:
        type: integer
      status:
        type: integer
    type: object
  v2.CSVConfig:
    properties:
      binary_encoding_method:
        type: string
      delimiter:
        type: string
      include_commit_ts:
        type: boolean
      "null":
        type: string
      quote:
        type: string
    type: object
  v2.Capture:
    properties:
      address:
        type: string
      cluster_id:
        type: string
      id:
        type: string
      is_owner:
        type: boolean
    type: object
  v2.ChangeFeedInfo:
    properties:
      admin_job_type:
        description: used for admin job notification, trigger watch event in capture
        type: integer
      checkpoint_time:
        type: string
      checkpoint_ts:
        type: integer
      config:
        $ref: '#/definitions/v2.ReplicaConfig'
      create_time:
        type: string
      creator_version:
        type: string
      error:
        $ref: '#/definitions/v2.RunningError'
      id:
        type: string
      namespace:
        type: string
      resolved_ts:
        type: integer
      sink_uri:
        type: string
      start_ts:
        description: Start sync at this commit ts if `StartTs` is specify or using
          the CreateTime of changefeed.
        type: integer
      state:
        type: string
      target_ts:
        description: The ChangeFeed will exits until sync to timestamp TargetTs
        type: integer
      task_status:
        items:
          $ref: '#/definitions/model.CaptureTaskStatus'
        type: array
      upstream_id:
        type: integer
    type: object
  v2.ChangefeedCommonInfo:
    properties:
      checkpoint_time:
        type: string
      checkpoint_tso:
        type: integer
      error:
        $ref: '#/definitions/model.RunningError'
      id:
        type: string
      namespace:
        type: string
      state:
        type: string
      upstream_id:
        type: integer
    type: object
  v2.ColumnSelector:
    properties:
      columns:
        items:
          type: string
        type: array
      matcher:
        items:
          type: string
        type: array
    type: object
  v2.ConsistentConfig:
    properties:
      encoding_worker_num:
        type: integer
      flush_interval:
        type: integer
      flush_worker_num:
        type: integer
      level:
        type: string
      max_log_size:
        type: integer
      meta_flush_interval:
        type: integer
      storage:
        type: string
      use_file_backend:
        type: boolean
    type: object
  v2.DispatchRule:
    properties:
      matcher:
        items:
          type: string
        type: array
      partition:
        type: string
      topic:
        type: string
    type: object
  v2.EmptyResponse:
    type: object
  v2.EventFilterRule:
    properties:
      ignore_delete_value_expr:
        type: string
      ignore_event:
        items:
          type: string
        type: array
      ignore_insert_value_expr:
        description: sql expression
        type: string
      ignore_sql:
        description: regular expression
        items:
          type: string
        type: array
      ignore_update_new_value_expr:
        type: string
      ignore_update_old_value_expr:
        type: string
      matcher:
        items:
          type: string
        type: array
    type: object
  v2.FilterConfig:
    properties:
      do_dbs:
        description: DoDBs is an allowlist of schemas.
        items:
          type: string
        type: array
      do_tables:
        description: DoTables is an allowlist of tables.
        items:
          $ref: '#/definitions/v2.Table'
        type: array
      event_filters:
        items:
          $ref: '#/definitions/v2.EventFilterRule'
        type: array
      ignore_dbs:
        description: IgnoreDBs is a blocklist of schemas.
        items:
          type: string
        type: array
      ignore_tables:
        description: IgnoreTables is a blocklist of tables.
        items:
          $ref: '#/definitions/v2.Table'
        type: array
      ignore_txn_start_ts:
        items:
          type: integer
        type: array
      rules:
        items:
          type: string
        type: array
    type: object
  v2.KafkaConfig:
    properties:
      large_message_handle:
        $ref: '#/definitions/v2.LargeMessageHandleConfig'
      sasl_mechanism:
        type: string
      sasl_oauth_audience:
        type: string
      sasl_oauth_client_id:
        type: string
      sasl_oauth_client_secret:
        type: string
      sasl_oauth_grant_type:
        type: string
      sasl_oauth_scopes:
        items:
          type: string
        type: array
      sasl_oauth_token_url:
        type: string
    type: object
  v2.LargeMessageHandleConfig:
    properties:
      large_message_handle_option:
        type: string
    type: object
  v2.LogLevelReq:
    properties:
      log_level:
        type: string
    type: object
  v2.MounterConfig:
    properties:
      worker_num:
        type: integer
    type: object
  v2.ProcessorCommonInfo:
    properties:
      capture_id:
        type: string
      changefeed_id:
        type: string
      namespace:
        type: string
    type: object
  v2.ProcessorDetail:
    properties:
      table_ids:
        description: All table ids that this processor are replicating.
        items:
          type: integer
        type: array
    type: object
  v2.ReplicaConfig:
    properties:
      bdr_mode:
        type: boolean
      case_sensitive:
        type: boolean
      check_gc_safe_point:
        type: boolean
      consistent:
        $ref: '#/definitions/v2.ConsistentConfig'
      enable_old_value:
        type: boolean
      enable_sync_point:
        type: boolean
      filter:
        $ref: '#/definitions/v2.FilterConfig'
      force_replicate:
        type: boolean
      ignore_ineligible_table:
        type: boolean
      memory_quota:
        type: integer
      mounter:
        $ref: '#/definitions/v2.MounterConfig'
      sink:
        $ref: '#/definitions/v2.SinkConfig'
      sync_point_interval:
        type: string
      sync_point_retention:
        type: string
    type: object
  v2.RunningError:
    properties:
      addr:
        type: string
      code:
        type: string
      message:
        type: string
      time:
        type: string
    type: object
  v2.ServerStatus:
    properties:
      cluster_id:
        type: string
      git_hash:
        type: string
      id:
        type: string
      is_owner:
        type: boolean
      liveness:
        type: integer
      pid:
        type: integer
      version:
        type: string
    type: object
  v2.SinkConfig:
    properties:
      advance_timeout:
        type: integer
      column_selectors:
        items:
          $ref: '#/definitions/v2.ColumnSelector'
        type: array
      csv:
        $ref: '#/definitions/v2.CSVConfig'
      date_separator:
        type: string
      dispatchers:
        items:
          $ref: '#/definitions/v2.DispatchRule'
        type: array
      enable_partition_separator:
        type: boolean
      encoder_concurrency:
        type: integer
      file_index_width:
        type: integer
      kafka_config:
        $ref: '#/definitions/v2.KafkaConfig'
      protocol:
        type: string
      schema_registry:
        type: string
      terminator:
        type: string
      transaction_atomicity:
        type: string
    type: object
  v2.Table:
    properties:
      database_name:
        description: Schema is the name of the schema (database) containing this table.
        type: string
      table_name:
        description: Name is the unqualified table name.
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/captures:
    get:
      consumes:
      - application/json
      description: list all captures in cdc cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Capture'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List captures
      tags:
      - capture
  /api/v1/captures/drain:
    put:
      consumes:
      - application/json
      description: Drain all tables at the target captures in cdc cluster
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Drain captures
      tags:
      - capture
  /api/v1/changefeeds:
    get:
      consumes:
      - application/json
      description: list all changefeeds in cdc cluster
      parameters:
      - description: state
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChangefeedCommonInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List changefeed
      tags:
      - changefeed
    post:
      consumes:
      - application/json
      description: create a new changefeed
      parameters:
      - description: changefeed config
        in: body
        name: changefeed
        required: true
        schema:
          $ref: '#/definitions/model.ChangefeedConfig'
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Create changefeed
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}:
    delete:
      consumes:
      - application/json
      description: Remove a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Remove a changefeed
      tags:
      - changefeed
    get:
      consumes:
      - application/json
      description: get detail information of a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChangefeedDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get changefeed
      tags:
      - changefeed
    put:
      consumes:
      - application/json
      description: Update a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: changefeed target ts
        in: body
        name: target_ts
        schema:
          type: integer
      - description: sink uri
        in: body
        name: sink_uri
        schema:
          type: string
      - description: filter rules
        in: body
        name: filter_rules
        schema:
          items:
            type: string
          type: array
      - description: ignore transaction start ts
        in: body
        name: ignore_txn_start_ts
        schema:
          type: integer
      - description: mounter worker nums
        in: body
        name: mounter_worker_num
        schema:
          type: integer
      - description: sink config
        in: body
        name: sink_config
        schema:
          $ref: '#/definitions/config.SinkConfig'
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Update a changefeed
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}/pause:
    post:
      consumes:
      - application/json
      description: Pause a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Pause a changefeed
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}/resume:
    post:
      consumes:
      - application/json
      description: Resume a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Resume a changefeed
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}/tables/move_table:
    post:
      consumes:
      - application/json
      description: move one table to the target capture
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: table_id
        in: body
        name: table_id
        required: true
        schema:
          type: integer
      - description: capture_id
        in: body
        name: capture_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: move table
      tags:
      - changefeed
  /api/v1/changefeeds/{changefeed_id}/tables/rebalance_table:
    post:
      consumes:
      - application/json
      description: rebalance all tables of a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: rebalance tables
      tags:
      - changefeed
  /api/v1/health:
    get:
      consumes:
      - application/json
      description: check if CDC cluster is health
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Check if CDC cluster is health
      tags:
      - common
  /api/v1/log:
    post:
      consumes:
      - application/json
      description: change TiCDC log level dynamically
      parameters:
      - description: log level
        in: body
        name: log_level
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Change TiCDC log level
      tags:
      - common
  /api/v1/owner/resign:
    post:
      consumes:
      - application/json
      description: notify the current owner to resign
      produces:
      - application/json
      responses:
        "202":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: notify the owner to resign
      tags:
      - owner
  /api/v1/processors:
    get:
      consumes:
      - application/json
      description: list all processors in the TiCDC cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ProcessorCommonInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List processors
      tags:
      - processor
  /api/v1/processors/{changefeed_id}/{capture_id}:
    get:
      consumes:
      - application/json
      description: get the detail information of a processor
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProcessorDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get processor detail information
      tags:
      - processor
  /api/v1/status:
    get:
      consumes:
      - application/json
      description: get the status of a server(capture)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ServerStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get server status
      tags:
      - common
  /api/v2/captures:
    get:
      description: list all captures in cdc cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2.Capture'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List captures
      tags:
      - capture
      - v2
  /api/v2/changefeeds:
    get:
      consumes:
      - application/json
      description: list all changefeeds in cdc cluster
      parameters:
      - description: state
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2.ChangefeedCommonInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List changefeed
      tags:
      - changefeed
      - v2
  /api/v2/changefeeds/{changefeed_id}:
    delete:
      consumes:
      - application/json
      description: Remove a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Remove a changefeed
      tags:
      - changefeed
      - v2
    get:
      consumes:
      - application/json
      description: get detail information of a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.ChangeFeedInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get changefeed
      tags:
      - changefeed
      - v2
  /api/v2/changefeeds/{changefeed_id}/pause:
    post:
      consumes:
      - application/json
      description: Pause a changefeed
      parameters:
      - description: changefeed_id
        in: path
        name: changefeed_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Pause a changefeed
      tags:
      - changefeed
      - v2
  /api/v2/health:
    get:
      description: Check the health status of a TiCDC cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Check the health status of a TiCDC cluster
      tags:
      - common
      - v2
  /api/v2/log:
    post:
      consumes:
      - application/json
      description: change TiCDC log level dynamically
      parameters:
      - description: log level
        in: body
        name: log_level
        required: true
        schema:
          $ref: '#/definitions/v2.LogLevelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Change TiCDC log level
      tags:
      - common
      - v2
  /api/v2/owner/resign:
    post:
      consumes:
      - application/json
      description: Notify the current owner to resign
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.EmptyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Notify the owner to resign
      tags:
      - owner
      - v2
  /api/v2/processors:
    get:
      description: list all processors in the TiCDC cluster
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2.ProcessorCommonInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: List processors
      tags:
      - processor
      - v2
  /api/v2/processors/{changefeed_id}/{capture_id}:
    get:
      description: get the detail information of a processor
      parameters:
      - description: changefeed ID
        in: path
        name: changefeed_id
        required: true
        type: string
      - description: capture ID
        in: path
        name: capture_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.ProcessorDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get processor detail information
      tags:
      - processor
      - v2
  /api/v2/status:
    get:
      consumes:
      - application/json
      description: This API is a synchronous interface. If the request is successful,
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2.ServerStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get the status information of a TiCDC node
      tags:
      - common
      - v2
swagger: "2.0"
