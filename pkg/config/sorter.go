// Copyright 2020 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

package config

import "github.com/pingcap/tiflow/pkg/errors"

// SorterConfig represents sorter config for a changefeed
type SorterConfig struct {
	// the maximum memory use percentage that allows in-memory sorting
	MaxMemoryPercentage int `toml:"max-memory-percentage" json:"max-memory-percentage"`
	// the directory used to store the temporary files generated by the sorter
	SortDir string `toml:"sort-dir" json:"sort-dir"`

	// the maximum memory consumption allowed for in-memory sorting
	// Deprecated: we don't use this field anymore after introducing pull based sink.
	MaxMemoryConsumption uint64 `toml:"max-memory-consumption" json:"max-memory-consumption"`
	// the size of workerpool
	// Deprecated: we don't use this field anymore after introducing pull based sink.
	NumWorkerPoolGoroutine int `toml:"num-workerpool-goroutine" json:"num-workerpool-goroutine"`
	// number of concurrent heap sorts
	// Deprecated: we don't use this field anymore after introducing pull based sink.
	NumConcurrentWorker int `toml:"num-concurrent-worker" json:"num-concurrent-worker"`
	// maximum size for a heap
	// Deprecated: we don't use this field anymore after introducing pull based sink.
	ChunkSizeLimit uint64 `toml:"chunk-size-limit" json:"chunk-size-limit"`
}

// ValidateAndAdjust validates and adjusts the sorter configuration
func (c *SorterConfig) ValidateAndAdjust() error {
	if c.MaxMemoryPercentage < 0 || c.MaxMemoryPercentage > 80 {
		return errors.ErrIllegalSorterParameter.GenWithStackByArgs(
			"max-memory-percentage should be a percentage and within (0, 80]")
	}

	return nil
}
