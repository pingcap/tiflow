// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/sink/kafka/v2/gssapi.go

// Package mock_v2 is a generated GoMock package.
package mock_v2

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	credentials "github.com/jcmturner/gokrb5/v8/credentials"
	messages "github.com/jcmturner/gokrb5/v8/messages"
	types "github.com/jcmturner/gokrb5/v8/types"
)

// MockGokrb5v8Client is a mock of Gokrb5v8Client interface.
type MockGokrb5v8Client struct {
	ctrl     *gomock.Controller
	recorder *MockGokrb5v8ClientMockRecorder
}

// MockGokrb5v8ClientMockRecorder is the mock recorder for MockGokrb5v8Client.
type MockGokrb5v8ClientMockRecorder struct {
	mock *MockGokrb5v8Client
}

// NewMockGokrb5v8Client creates a new mock instance.
func NewMockGokrb5v8Client(ctrl *gomock.Controller) *MockGokrb5v8Client {
	mock := &MockGokrb5v8Client{ctrl: ctrl}
	mock.recorder = &MockGokrb5v8ClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGokrb5v8Client) EXPECT() *MockGokrb5v8ClientMockRecorder {
	return m.recorder
}

// Credentials mocks base method.
func (m *MockGokrb5v8Client) Credentials() *credentials.Credentials {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Credentials")
	ret0, _ := ret[0].(*credentials.Credentials)
	return ret0
}

// Credentials indicates an expected call of Credentials.
func (mr *MockGokrb5v8ClientMockRecorder) Credentials() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Credentials", reflect.TypeOf((*MockGokrb5v8Client)(nil).Credentials))
}

// Destroy mocks base method.
func (m *MockGokrb5v8Client) Destroy() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Destroy")
}

// Destroy indicates an expected call of Destroy.
func (mr *MockGokrb5v8ClientMockRecorder) Destroy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockGokrb5v8Client)(nil).Destroy))
}

// GetServiceTicket mocks base method.
func (m *MockGokrb5v8Client) GetServiceTicket(spn string) (messages.Ticket, types.EncryptionKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceTicket", spn)
	ret0, _ := ret[0].(messages.Ticket)
	ret1, _ := ret[1].(types.EncryptionKey)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetServiceTicket indicates an expected call of GetServiceTicket.
func (mr *MockGokrb5v8ClientMockRecorder) GetServiceTicket(spn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceTicket", reflect.TypeOf((*MockGokrb5v8Client)(nil).GetServiceTicket), spn)
}
