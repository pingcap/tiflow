// Code generated by MockGen. DO NOT EDIT.
// Source: tso.go

// Package mock_v2 is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v2 "github.com/pingcap/tiflow/cdc/api/v2"
	v20 "github.com/pingcap/tiflow/pkg/api/v2"
)

// MockTsoGetter is a mock of TsoGetter interface.
type MockTsoGetter struct {
	ctrl     *gomock.Controller
	recorder *MockTsoGetterMockRecorder
}

// MockTsoGetterMockRecorder is the mock recorder for MockTsoGetter.
type MockTsoGetterMockRecorder struct {
	mock *MockTsoGetter
}

// NewMockTsoGetter creates a new mock instance.
func NewMockTsoGetter(ctrl *gomock.Controller) *MockTsoGetter {
	mock := &MockTsoGetter{ctrl: ctrl}
	mock.recorder = &MockTsoGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTsoGetter) EXPECT() *MockTsoGetterMockRecorder {
	return m.recorder
}

// Tso mocks base method.
func (m *MockTsoGetter) Tso() v20.TsoInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Tso")
	ret0, _ := ret[0].(v20.TsoInterface)
	return ret0
}

// Tso indicates an expected call of Tso.
func (mr *MockTsoGetterMockRecorder) Tso() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Tso",
		reflect.TypeOf((*MockTsoGetter)(nil).Tso))
}

// MockTsoInterface is a mock of TsoInterface interface.
type MockTsoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTsoInterfaceMockRecorder
}

// MockTsoInterfaceMockRecorder is the mock recorder for MockTsoInterface.
type MockTsoInterfaceMockRecorder struct {
	mock *MockTsoInterface
}

// NewMockTsoInterface creates a new mock instance.
func NewMockTsoInterface(ctrl *gomock.Controller) *MockTsoInterface {
	mock := &MockTsoInterface{ctrl: ctrl}
	mock.recorder = &MockTsoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTsoInterface) EXPECT() *MockTsoInterfaceMockRecorder {
	return m.recorder
}

// Query mocks base method.
func (m *MockTsoInterface) Query(ctx context.Context,
	config *v2.UpstreamConfig,
) (*v2.Tso, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Query", ctx, config)
	ret0, _ := ret[0].(*v2.Tso)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Query indicates an expected call of Query.
func (mr *MockTsoInterfaceMockRecorder) Query(ctx,
	config interface{},
) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Query",
		reflect.TypeOf((*MockTsoInterface)(nil).Query), ctx, config)
}
